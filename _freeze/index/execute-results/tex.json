{
  "hash": "6b4c3ec2e7416a946e0c2307915fc867",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Geographical Pattern of Martyrs’ Memorial Facilities and China's Communist Revolution\"\nsubtitle: \"PPOL 6805: GIS for Spatial Data Science Final Project\"\nauthors:\n  - name: Xiangming Zeng\n    email: xz634@georgetown.edu\n    affiliation: Georgetown University\n    corresponding: true\nexecute:\n  cache: true\n  warning: false\ndf-print: kable\nbibliography: \"GIS_references.bib\"\ntitle-block-banner: \"#E69F0095\"\ntitle-block-banner-color: \"white\"\nformat:\n  html:\n    df-print: kable\n  pdf: \n    link-citations: true\nprefer-html: true\n---\n\n\n\n\n\n\n## Load Libraries\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite) |> suppressPackageStartupMessages()\nlibrary(tidyverse) |> suppressPackageStartupMessages()\nlibrary(maps) |> suppressPackageStartupMessages()\nlibrary(sf) |> suppressPackageStartupMessages()\nlibrary(readxl) |> suppressPackageStartupMessages()\nlibrary(spatstat) |> suppressPackageStartupMessages()\nlibrary(mapview) |> suppressPackageStartupMessages()\nlibrary(spdep) |> suppressPackageStartupMessages()\nlibrary(spatialreg) |> suppressPackageStartupMessages()\nlibrary(patchwork) |> suppressPackageStartupMessages()\nlibrary(lmtest) |> suppressPackageStartupMessages()\nset.seed(20001015)\n\ncb_palette <- c(\"#E69F00\", \"#56B4E9\", \"#009E73\", \"#F0E442\", \"#0072B2\", \"#D55E00\", \"#CC79A7\")\n```\n:::\n\n\n\n\n\n\n## 1.Introduction\n\nI am interested in studying the geographical distribution of martyrs’ memorial facilities in China. According to the Regulations on the Protection and Management of Martyrs’ Memorial Facilities, these facilities include martyrs’ cemeteries, martyrs’ graves, martyrs’ columbariums, walls of martyrs’ names, memorial halls, monuments, memorial pavilions, memorial towers, memorial shrines, memorial statues, and memorial squares (none is more familiar with those facilities than a DC citizen). These facilities can be seen as remnants of the Communist Revolution in China during the early 20th century. Their distribution reflects various aspects, such as the number of individuals from a region who sacrificed their lives for the Communist Revolution, the significance of these locations in the revolution (akin to Lexington’s role in the American Revolutionary War), former revolutionary base areas and battle sites, or perhaps simply the local government’s interest in ideological promotion (e.g., if a city has little connection to the Communist Revolution but still hosts a notable number of such facilities).\n\nThe data I am using was found in an Excel document on a Chinese econometrics web forum. However, I have not been able to identify the author or any related publication using this dataset. The dataset includes 3,966 observations and appears sufficiently exclusive, even if it does not cover all those facilities. Additionally, I conducted a sampling-based search and cross-validation for some of the facilities, confirming that the dataset provides accurate facility name, latitude and longitude information, except for approximately 100 facilities whose coordinates were incorrectly placed outside China’s borders. Despite its imperfections, this dataset offers a solid starting point for exploring the geographical distribution of martyrs’ memorial facilities and the spatial characteristics of the Chinese Communist Revolution.\n\n\n## 2.Visualize Martyrs’ Memorial Facilities\n\n### 2.1. Loading China's Map\n\nAlthough rnaturalearth can provide China map, it's not accurate enough, especially for city level. Therefore, instead, I choose to use a China map I found online.\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `100000_full_city' from data source \n  `https://geo.datav.aliyun.com/areas_v3/bound/100000_full_city.json' \n  using driver `GeoJSON'\nSimple feature collection with 477 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 73.50647 ymin: 3.397162 xmax: 135.0946 ymax: 53.56362\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-2-1.pdf)\n:::\n:::\n\n\n\n\n\n\nHowever, this approach also has its challenges. First, the four directly administered municipalities—Beijing, Shanghai, Tianjin, and Chongqing—are subdivided into district-level units (e.g., Beijing is divided into 16 “cities”). However, most statistical data is not available at the district level but treats these four municipalities as single cities. Therefore, the polygons of these four municipalities must first be merged.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n###Beijing\nbeijing <- china %>%\n  slice(1:16) %>%                       \n  mutate(geometry = st_make_valid(geometry)) %>%  \n  summarise(geometry = st_union(geometry)) %>%    \n  mutate(name = \"北京市\") %>%                \n  select(name,geometry)\n\nchina <- china %>%\n  slice(-1:-16) %>%         \n  bind_rows(beijing)     \n\n###Tianjin\ntianjin <- china %>%\n  slice(1:16) %>%                   \n  mutate(geometry = st_make_valid(geometry)) %>%  \n  summarise(geometry = st_union(geometry)) %>%   \n  mutate(name = \"天津市\") %>%          \n  select(name,geometry)\n\nchina <- china %>%\n  slice(-1:-16) %>%         \n  bind_rows(tianjin)       \n\n###Shanghai\nshanghai <- china %>%\n  slice(71:86) %>%                   \n  mutate(geometry = st_make_valid(geometry)) %>%  \n  summarise(geometry = st_union(geometry)) %>%    \n  mutate(name = \"上海市\") %>%           \n  select(name,geometry)\n\nchina <- china %>%\n  slice(-71:-86) %>%        \n  bind_rows(shanghai)       \n\n###Chongqing\nchongqing <- china %>%\n  slice(250:287) %>%                     \n  mutate(geometry = st_make_valid(geometry)) %>%  \n  summarise(geometry = st_union(geometry)) %>%    \n  mutate(name = \"重庆市\") %>%            \n  select(name,geometry)\n\nchina <- china %>%\n  slice(-250:-287) %>%         \n  bind_rows(chongqing)   \n```\n:::\n\n\n\n\n\n\nAnother issue is that our analysis does not include Taiwan, Hong Kong, and Macau, as they were not impacted directly by the Chinese Communist Revolution. Therefore, the next step is to remove the polygons for these regions.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina <- china %>% slice(c(-364:-391)) \n\nchina <- china %>% slice(-233) \n\nchina_sf <- sf::st_transform(china, crs = 3857) %>% rename(city = name)\n\nchina_map <- mapview(china_sf, legend = FALSE)\nchina_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-4-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### 2.2. Load Martyrs’ Memorial Facilities\n\nAfter loading the data, I conducted an initial visualization of the distribution of martyrs’ memorial facilities in China. Due to the large sample size, I randomly selected 500 points and used mapview to display their distribution on a map.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmf <- read_excel(\"data/Martyrs’ Memorial Facilities.xlsx\")\n\nmf_sf <- st_as_sf(mf, coords = c(\"longitude\", \"latitude\"), crs = 4326) %>% \n  sf::st_transform(3857)\n\nsample_mf_sf <- slice_sample(mf_sf, n = 500)\n\nmapview(sample_mf_sf) + china_map\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-5-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### 2.2. Count Martyrs’ Memorial Facilities in Each City\n\nHere, I used st_join to calculate the number of martyrs’ memorial facilities contained within each city.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- st_make_valid(china_sf)\n\nmf_sf <- mf_sf %>% select(-city)\n\njoined_sf <- st_join(mf_sf, china_sf, join = st_within)\n\npoint_counts <- joined_sf %>%\n  group_by(city) %>%\n  summarize(facilities = n())\n\npoint_counts <- point_counts %>% st_drop_geometry()\n\nchina_sf <- china_sf %>%\n  left_join(point_counts, by = \"city\")\n```\n:::\n\n\n\n\n\n\nNA should mean no facilities. Therefoere, replace na with 0.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$facilities[is.na(china_sf$facilities)] <- 0\n```\n:::\n\n\n\n\n\n\nThen, we can visualize the city-level distribution of martyrs’ memorial facilities.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf |> ggplot(aes(fill=facilities)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-8-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n## 3. Clan Network and China's Communist Revolution\n\n@FeiXiaoTongXiangTuZhongGuo2005 argued that clan networks were a crucial soft organizational structure in traditional Chinese society. In the traditional Chinese governance system, the central government’s administrative control extended only to the county level, leaving governance below that level largely reliant on local clan networks, especially the management of prominent gentry. Clan networks took on many functions that modern governments fulfill today, particularly in the provision of public goods. For instance, they mediated disputes, administered justice (providing “fairness”), and facilitated education. Many traditional educational institutions, such as private academies (sishu), were often funded jointly by clan members and used clan-owned properties as venues.\n\nHowever, in the traditional narratives of the Chinese Communist Party (CCP), especially before the reform and opening-up era, clans were seen as part of the feudal superstructure and thus symbols of conservatism, backwardness, and autocracy. Clan network leaders were often landlords, who were depicted as the primary “counter-revolutionaries” during the Communist Revolution and the targets of land reform and subsequent political campaigns (e.g., landlords were part of the “Five Black Categories”). This negative portrayal stemmed partly from Marxist historical materialism and partly from the practical needs of revolutionary struggle. In CCP narratives, landlord groups were strong supporters of the Chiang Kai-shek regime and, thus, unforgivable class enemies in the battle for power.\n\nThis narrative, however, is largely a construction, as local landlords were not closely tied to the Nationalist Party (KMT). In fact, KMT failed to establish solid control at village level. The negative propaganda against landlords was primarily driven by the political mobilization needs of the revolution. Before the Civil War, the CCP faced the challenge of rallying public support to overthrow the KMT government, which still enjoyed high prestige and legitimacy following the War of Resistance against Japan. China had emerged as a victor in World War II and a permanent member of the United Nations Security Council, marking significant advancements in its international standing. To overcome this legitimacy, the CCP launched a series of land reform campaigns in its controlled areas, inciting peasants to denounce landlords and redistributing their land and assets to the people.\n\nThe CCP also sought to link hatred of landlords with hostility toward the Chiang regime. One infamous practice was the Wang Jiang Gan (“looking at Chiang pole”) described by @GaoYaoJieBeiCanShiDaiGaoYaoJieHuiYi2016. This involved tying landlords to a pole and gradually hoisting them up while asking if they could “see Chiang Kai-shek.” If the landlord answered no, they were hoisted higher; if they answered yes, they will die from dropping. Regardless of the response, the ultimate fate was often death by dropping.\n\nDespite the CCP’s animosity toward landlords and the traditional clan networks they represented, it is surprising to find that many Communist leaders came from landlord families. Mao Zedong himself was born into a landlord family. As @walderChinaMaoRevolution2015 argued, this might be because early Communist revolutionaries were intellectuals, and literacy and access to higher education were crucial for exposure to and understanding of Communist ideology. Clan networks traditionally emphasized education, and the relationship between clan support and success in the imperial examination system (keju) has been well-documented. Clans often funded public education (sishu) and, in the early 20th century, could financially support young members pursuing higher or even Western education.\n\nThus, I plan to study the impact of traditional Chinese clan networks on the Communist Revolution. To operationalize this research, I will use the number of genealogies per capita from the Qing Dynasty and earlier to reflect the historical strength of clan networks, as genealogies are a significant measure of clan culture intensity. Additionally, I will use the number of martyrs’ memorial facilities per capita to measure revolutionary culture.\n\n### 3.1. Load Genealogy Data\n\nUnfortunately, I also found the genealogical data for each prefecture-level city on the same forum, so I have not been able to identify its author either. However, in subsequent visualization results, we can see that areas with high genealogical density align well with common knowledge about regions with strong clan culture. Jiangsu and Zhejiang (the eastern regions of China near Shanghai) have the highest number of genealogies. Therefore, I have chosen to trust the quality of this dataset. The dataset includes the number of genealogies for each city from the Song, Yuan, Ming, and Qing dynasties, as well as the population in 1990.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngen <- read_excel(\"data/Genealogy.xlsx\")\n\ngen <- gen %>%\n  mutate(across(c(Song, Yuan, Ming, Qing), ~replace(., is.na(.), 0))) %>% \n  mutate(genealogies = Song + Yuan + Ming + Qing) %>% \n  select(-Song, -Yuan, -Ming, -Qing)\n```\n:::\n\n\n\n\n\n\nHere, I joined the new dataset with the main martyrs’ memorial facilities dataset, china_sf.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>%\n  left_join(gen, by = \"city\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>% select(city, province, pop, facilities, genealogies, geometry)\n```\n:::\n\n\n\n\n\n\nAs mentioned above, the map shows that Jiangsu and Zhejiang have the strongest clan culture intensity, which aligns with our common knowledge.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf |> ggplot(aes(fill=genealogies)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-12-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nFor the missing values in the genealogical data, we can observe from the map that these are concentrated in non-Han areas in western China. Since clan networks are a phenomenon specific to Han culture, particularly prevalent in southeastern China, it is reasonable to fill the missing values with 0.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$genealogies[is.na(china_sf$genealogies)] <- 0\n```\n:::\n\n\n\n\n\n\n### 3.2. Population Data Manipulation\n\nSince I plan to “standardize” the independent and dependent variables using per capita values, population is also an important variable. Therefore, I first visualized the population distribution in China in 1990.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf |> ggplot(aes(fill=pop)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-14-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs seen in the figure, there are many missing values in the population data, and it is not feasible to fill them with 0. Therefore, I plan to fill the missing values with the average population of the five nearest neighbors.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$centroid <- st_centroid(china_sf$geometry)\n\nchina_nb <- knn2nb(knearneigh(china_sf$centroid, k = 5))\n\nchina_listw <- nb2listw(china_nb, style = \"W\")\n\nchina_sf$pop_mean_neighbors <- sapply(1:nrow(china_sf), function(i) {\n  neighbors <- china_nb[[i]]\n  neighbor_pops <- china_sf$pop[neighbors]\n  mean_pop <- mean(neighbor_pops, na.rm = TRUE)\n  return(mean_pop)\n})\n\nchina_sf$pop <- ifelse(is.na(china_sf$pop), china_sf$pop_mean_neighbors, china_sf$pop)\n\nchina_sf |> ggplot(aes(fill=pop)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-15-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs shown in the figure, all the missing population values have now been filled, and the filled areas appear very smooth without producing outliers that differ significantly from the surrounding cities.\n\nNow, here is no missing values in china_sf\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>% select(-centroid, -pop_mean_neighbors)\n```\n:::\n\n\n\n\n\n\nThen, we can use population to \"standardize\" two major variables.\n\n### 3.3. Preliminary Regression\n\nHowever, in the subsequent regression, I attempted to use the log form of the two variables, but taking the log of 0 would result in a large number of missing values. Therefore, I first added 1 to both main variables. This approach minimizes estimation bias while significantly preserving the sample size.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>% \n  mutate(facap = 100*(1+facilities)/pop) %>% \n  mutate(gecap = 100*(1+genealogies)/pop)\n```\n:::\n\n\n\n\n\n\nHere, I attempt to gain an initial intuition about the relationship between the two variables through a scatter plot.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(china_sf, aes(x = gecap, y = facap)) +\n  geom_point() +  \n  labs(x = \"Genealogies\", y = \"Facilities\", title = \"Scatter plot of Facilities vs Genealogies\") +\n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-18-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThis plot looks strange due to the presence of a severe outlier. Therefore, the next step is to identify and remove this outlier. The method I chose is to replace the outlier’s two variables with their respective medians.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfacap_above_3000 <- china_sf %>% filter(facap > 3000)\n\nfacap_above_3000\n```\n\n::: {.cell-output-display}\n\n|city     |province   |      pop| facilities| genealogies|geometry                       |   facap|    gecap|\n|:--------|:----------|--------:|----------:|-----------:|:------------------------------|-------:|--------:|\n|阿里地区 |西藏自治区 | 0.000613|          7|           0|POLYGON ((9581332 4281466, ... | 1305057| 163132.1|\n\n:::\n\n```{.r .cell-code}\nchina_sf <- china_sf %>%\n  mutate(\n    facap = ifelse(facap > 3000, median(facap), facap),\n    gecap = ifelse(gecap > 3000, median(gecap), gecap)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(china_sf, aes(x = gecap, y = facap)) +\n  geom_point() +  \n  labs(x = \"Genealogies\", y = \"Facilities\", title = \"Scatter plot of Facilities vs Genealogies\") +\n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-20-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nNow, we can finally observe the relationship between the two variables. However, there does not seem to be a clear linear relationship between them. Therefore, I plan to take the log of both variables to examine any potential non-linear relationship between them.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>% \n  mutate(lfacap = log(facap)) %>% \n  mutate(lgecap = log(gecap))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(china_sf, aes(x = lgecap, y = lfacap)) +\n  geom_point() +  \n  geom_smooth(method = \"lm\", formula = y ~ poly(x, 2), color = \"blue\", se = FALSE) +  \n  labs(x = \"Genealogies\", y = \"Facilities\", title = \"Scatter plot of Facilities vs Genealogies\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-22-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nIt is clear that there is a significant inverted U-shaped relationship between the two variables. This is actually not surprising, as I previously discussed the relationship between clan culture and education, and the importance of education in accessing communist ideology. Therefore, when clan culture is weak, increasing clan culture can improve educational opportunities, which in turn increases the likelihood of individuals being exposed to communist ideas, leading to a positive correlation between the two variables. However, when clan power is strong, extreme ideologies like communism are suppressed, especially because clan culture often carries strong conservative tendencies.\n\nTherefore, I hypothesize: \n\n**H1:** The clan culture has a negative relationship with red culture/China' communist revolution.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>% \n  mutate(lgecap2 = lgecap^2)\n```\n:::\n\n\n\n\n\n\nNext, to test the significance of this inverted U-shaped relationship, I performed a simple regression that includes the squared term of the independent variable.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nols_fit <- lm(lfacap ~ lgecap + lgecap2, data=china_sf)\n\nresult_df <- broom::tidy(ols_fit)\n\nresult_df$p.value <- formatC(result_df$p.value, format = \"f\", digits = 3)\n\nresult_df\n```\n\n::: {.cell-output-display}\n\n|term        |   estimate| std.error| statistic|p.value |\n|:-----------|----------:|---------:|---------:|:-------|\n|(Intercept) |  1.3020691| 0.0606410| 21.471754|0.000   |\n|lgecap      |  0.2655707| 0.0611107|  4.345732|0.000   |\n|lgecap2     | -0.0559173| 0.0143381| -3.899902|0.000   |\n\n:::\n:::\n\n\n\n\n\n\nThe results show that both the independent variable and its squared term are significant at the 0.001 level. Therefore, H1 is supported.\n\nHere, I visualized the two logged variables, so we can see they relationship graphically.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_lgecap <- china_sf |> ggplot(aes(fill=lgecap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n\nchina_lfacap <- china_sf |> ggplot(aes(fill=lfacap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n\nchina_lgecap+china_lfacap\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-25-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nBesides, to look into the relationship between two variables more closely, I try to zoom in southeast China, where is the origon of China's communist revolution.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$province[china_sf$city == \"襄阳市\"] <- \"湖北省\"\n\nsoutheast_china_sf <- china_sf %>% filter(province %in% c(\"江西省\", \"福建省\", \"广东省\", \"安徽省\", \"浙江省\", \"江苏省\", \"湖南省\", \"湖北省\", \"上海市\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsoutheast_lgecap <- southeast_china_sf |> ggplot(aes(fill=lgecap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n\nsoutheast_lfacap <- southeast_china_sf |> ggplot(aes(fill=lfacap)) +\n  geom_sf() +\n  scale_fill_viridis_c(option=\"C\") +\n  theme_classic()\n\nsoutheast_lgecap+southeast_lfacap\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-27-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nIt’s clear that clan networks are well-developed throughout southeastern China, especially in the Zhejiang region in the eastern part. On the other hand, martyr memorial facilities are highly concentrated in Jiangxi Province (the central part of the map), while their density is much lower in the western province of Hunan and the northeastern provinces of Jiangsu and Zhejiang. Interestingly, there is a distinct contrast between Jiangxi and Hunan, a phenomenon that is further discussed below. But overall, we can see a negative relationship between clan culture and red culture in Jiangsu and Zhejiang, where exist the strongest clan culture, supporting H1 further.\n\n### 3.4. Spatial Regression\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$resid <- ols_fit$residuals\nchina_sf |> ggplot(aes(x=lgecap, y=resid)) +\n  geom_point() +\n  geom_hline(yintercept=0, color=cb_palette[1], linewidth=1) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-28-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nHowever, the visualization results also raise concerns about spatial autocorrelation. We found that both clan culture and revolutionary culture exhibit strong clustering. Therefore, it is necessary to test whether spatial autocorrelation exists in the regression above.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ni_resid <- moran.test(china_sf$resid, china_listw)\n\ni_resid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  china_sf$resid  \nweights: china_listw    \n\nMoran I statistic standard deviate = 12.164, p-value < 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n     0.3763306541     -0.0027397260      0.0009712037 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nMoran's I of residual is 0.376, which is not too strong, but still need to be handled. I run a spatial regression to reduce the bias caused by spatial autocorrelation.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nldv_fit <- lagsarlm(lfacap ~ lgecap + lgecap2, data=china_sf, listw=china_listw)\n\nldv_result_df <- broom::tidy(ldv_fit)\n\nldv_result_df$p.value <- formatC(ldv_result_df$p.value, format = \"f\", digits = 3)\n\nldv_result_df\n```\n\n::: {.cell-output-display}\n\n|term        |   estimate| std.error| statistic|p.value |\n|:-----------|----------:|---------:|---------:|:-------|\n|rho         |  0.5839477| 0.0532361| 10.969019|0.000   |\n|(Intercept) |  0.5217873| 0.0889633|  5.865195|0.000   |\n|lgecap      |  0.1733355| 0.0517978|  3.346389|0.001   |\n|lgecap2     | -0.0309012| 0.0120704| -2.560075|0.010   |\n\n:::\n:::\n\n\n\n\n\n\nThe independent variable and its squared term remain significant, but their significance has decreased because part of the data’s information is used to estimate the impact of spatial autocorrelation. Meanwhile, rho is significant at the 0.001 level, indicating that spatial autocorrelation does indeed exist.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf$sp_resid <- ldv_fit$resid\nchina_sf |> ggplot(aes(x=lgecap, y=sp_resid)) +\n  geom_point() +\n  geom_hline(yintercept=0, color=cb_palette[1], linewidth=1) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-31-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ni_resid <- moran.test(china_sf$sp_resid, china_listw)\n\ni_resid\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  china_sf$sp_resid  \nweights: china_listw    \n\nMoran I statistic standard deviate = -0.59839, p-value = 0.7252\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n    -0.0213668594     -0.0027397260      0.0009689886 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nAfter controlling for spatial autocorrelation, the Moran’s I of the residuals decreased to -0.02, which is very close to 0, indicating that spatial autocorrelation has been effectively addressed.\n\n### 3.5. Equilibrium Effects\n\nGiven the **spatial** regression coefficient $\\rho$, and the **non-spatial** regression coefficient vector $\\boldsymbol\\beta = (\\beta_0, \\beta_1, \\beta_2)$, the long-run equilibrium value for $Y$ is given by\n\n$$\nY^* = (I - \\rho\\mathbf{W})^{-1}(X\\boldsymbol\\beta),\n$$\n\nUsing the formula above, we can calculate what happens to the number of martyr memorial facilities in Ganzhou, the capital of the Chinese Soviet Republic, and its surrounding areas when the clan network power in the region doubles. To focus this study on the Chinese Communist Revolution, I limit the research scope to southeastern China. This is because many memorial facilities in the north commemorate martyrs from the War of Resistance Against Japan, which are less directly related to the Communist Revolution. Southeastern China, however, was the birthplace of the early armed revolution of the Chinese Communist Party.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf <- china_sf %>%\n  mutate(southeast = if_else(province %in% c(\"江西省\", \"福建省\", \"广东省\", \"安徽省\", \"浙江省\", \"江苏省\", \"湖南省\", \"湖北省\", \"上海市\"), 1, 0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntarget_city <- \"赣州市\"\n# Create a dummy variable in it_sf which is 1 for this target collegio\nchina_sf <- china_sf |> mutate(\n  is_target = factor(city == target_city)\n)\n# Use sf to create a single geometry which is just a circle around the centroid\n# of the target collegio. Since 50km was our cutoff for being considered a\n# neighbor, we use 50km here for the radius of the circle\ncirc_radius <- 200000\ncirc_sf <- china_sf |> filter(is_target == TRUE) |> sf::st_centroid() |>\n  sf::st_buffer(circ_radius) |> sf::st_boundary()\nchina_sf %>%  filter(southeast  == 1) %>% ggplot() +\n  geom_sf(aes(fill=is_target)) +\n  geom_sf(data=circ_sf, linetype=\"dashed\") +\n  scale_fill_manual(values=c(cb_palette[1], cb_palette[2])) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-34-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThis diagram is a conceptual illustration, showing the target city where the independent variable is doubled in our “laboratory” and the potential spillover effects of this change on surrounding cities.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhich(china_sf$is_target == TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 126\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHere, I created a counterfactual variable for the number of genealogies per capita. The only difference between this counterfactual variable and the original variable is that the value in row 126, corresponding to Ganzhou City, is doubled from the original value.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nX_obs <- cbind(1, china_sf$lgecap, china_sf$lgecap2)\n\nchina_sf$gecap_cf <- china_sf$gecap\nchina_sf$gecap_cf[126] <- china_sf$gecap_cf[126] * 2\n\nX_cf <- cbind(1, log(china_sf$gecap_cf), log(china_sf$gecap_cf)^2) \n\nwhich(apply(X_obs != X_cf, 1, any))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 126\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHere, we can use the formula to calculate the difference between the equilibrium values of the dependent variable derived from the original independent variable and the counterfactual variable.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_y_eq <- function(X, beta, rho, nb_obj) {\n  # Create an identity matrix\n  I <- diag(nrow(X))\n  W <- nb2mat(nb_obj, style=\"W\")\n  y_eq <- solve(I - rho * W) %*% (X %*% beta)\n  return(y_eq)\n}\n\nestimates <- ldv_result_df$estimate\nbeta <- c(estimates[2], estimates[3], estimates[4])\nrho <- estimates[1]\n\nlfacap_eq <- compute_y_eq(X_obs, beta, rho, china_nb)\nlfacap_cf <- compute_y_eq(X_cf, beta, rho, china_nb)\n\nchina_sf$lfacap_diff <- as.vector(lfacap_cf - lfacap_eq)\n```\n:::\n\n\n\n\n\n\nWe can see that the differences are less than 0. Therefore, I visualized the regions where the size of the change in the dependent variable is greater than 0.001.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchina_sf |> filter(southeast == 1) |>\n    mutate(lfacap_diff = ifelse(lfacap_diff > -0.001, NA, lfacap_diff)) |>\n    ggplot(aes(fill=lfacap_diff)) +\n    geom_sf() +\n    scale_fill_viridis_c(option=\"C\") +\n    theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-38-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs shown in the figure, doubling clan culture leads to a decrease in the logged number of per capita martyr memorial facilities. Moreover, this negative effect exhibits a spillover effect that gradually diminishes in surrounding cities.\n\n## 4. The Distribution of Martyrs’ Memorial Facilities\n\n### 4.1. Visualize The Density of Martyrs’ Memorial Facilities\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# generate the window\nsoutheast_china_sfc <- southeast_china_sf %>% \n  select(geometry) %>% \n  st_buffer(300) %>%\n  st_union()\n\nmapview(southeast_china_sfc)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-39-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsoutheast_mf_sf <- mf_sf[st_within(mf_sf, southeast_china_sfc, sparse = FALSE), ]\n\nmf_ppp <- as.ppp(sf::st_as_sfc(southeast_mf_sf), W=as.owin(southeast_china_sfc))\nmf_density <- density(mf_ppp, sigma=50000)\n\nplot(mf_density)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-40-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### 4.2. Visualize The Population Density\n\nTo depict the population density, we first need to sample point data based on the proportion of each city’s population relative to the entire region. Here, I choose to sample 3000 points.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnsplit = function(X,n){\n  p = X/sum(X)\n  diff(round(n*cumsum(c(0,p))))\n}\n\nsoutheast_china_sf$sample <- nsplit(southeast_china_sf$pop, 3000) \n\nsoutheast_china_sf <- southeast_china_sf %>%\n  mutate(sample = if_else(sample == 0, 1, sample))\n\nsampled_points <- st_sample(southeast_china_sf, size = southeast_china_sf$sample, type = 'random')\n\nggplot() +\n  geom_sf(data = southeast_china_sf, fill = \"lightblue\", color = \"black\", alpha = 0.5) +  \n  geom_sf(data = sampled_points, color = \"red\", size = 0.5) +  \n  theme_minimal() +\n  labs(title = \"Randomly Sampled Points by Population Weight\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-41-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nNow, we can construct the population intensity function.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npop_ppp <- as.ppp(sampled_points, W=as.owin(southeast_china_sfc))\npop_density <- density(pop_ppp)\n\nplot(pop_density)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-42-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\n### 4.3. Revolution and Population\n\nTheoretically, communist revolutions are more likely to develop in areas with low population density, as such regions are often less suitable for human settlement due to rugged terrain. However, rugged terrain can benefit revolutionaries by providing hiding spots and opportunities to use the landscape to conduct guerrilla warfare against government forces, especially when they are outnumbered and outgunned. Therefore, I propose the following hypothesis:\n\n**H2:** Areas with lower population density will exhibit a higher density of martyrs’ memorial facilities.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnum_regions <- 3\nregion_labels <- c(\"Low\", \"Medium\", \"High\")\npop_vals <- pop_density\npop_quant <- quantile(pop_vals, probs=(0:num_regions)/num_regions, na.rm=TRUE)\npop_cut <- cut(pop_vals, breaks=pop_quant, labels=region_labels)\npop_areas <- tess(image=pop_cut)\nplot(pop_areas)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-43-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nobs_mf_counts <- quadratcount(mf_ppp, tess=pop_areas) |> as.vector()\nnames(obs_mf_counts) <- region_labels\nobs_mf_counts\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Low Medium   High \n   543    505    506 \n```\n\n\n:::\n:::\n\n\n\n\n\n\nAfter dividing the region into high, medium, and low population density areas, the next step involves using Monte Carlo Simulation to simulate the distribution of martyrs’ memorial facilities entirely based on population density 999 times. I then plotted the probability distribution of the number of martyrs’ memorial facilities in low-population-density areas from the simulations and compared it to the actual observed value.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_quadrat_counts <- function(sim_ppp) {\n  sim_counts <- quadratcount(sim_ppp, tess=pop_areas) |> as.vector()\n  names(sim_counts) <- region_labels\n  return(sim_counts)\n}\n\ngen_sims_ppp <- function(num_sims) {\n  prot_sims <- spatstat.random::rpoint(\n    n = nrow(southeast_mf_sf),\n    f = pop_density,\n    nsim = num_sims\n  )\n  return(prot_sims)\n}\n\nfull_sims_list <- gen_sims_ppp(num_sims = 999)\nfull_sim_area_counts <- lapply(X=full_sims_list, FUN=compute_quadrat_counts)\nfull_count_df <- as_tibble(full_sim_area_counts) |> t() |> as_tibble()\ncolnames(full_count_df) <- region_labels\nfull_count_df |> head()\n```\n\n::: {.cell-output-display}\n\n| Low| Medium| High|\n|---:|------:|----:|\n| 391|    497|  666|\n| 438|    449|  667|\n| 360|    483|  711|\n| 394|    501|  659|\n| 398|    502|  654|\n| 410|    514|  630|\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmc_df <- bind_rows(full_count_df, obs_mf_counts)\nfull_count_df |> ggplot(aes(x=Low)) +\n  geom_density(fill=cb_palette[2], alpha=0.5) +\n  geom_vline(xintercept = obs_mf_counts[\"Low\"], linetype=\"dashed\", color=cb_palette[1]) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-46-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs shown in the figure, the actual number of martyrs’ memorial facilities in low-population-density areas is 533, while the simulated values are concentrated around 390. Therefore, if the null hypothesis holds—i.e., martyrs’ memorial facilities are distributed according to population density—the observed value is extremely unlikely to be observed, as it lies at the far right tail of the probability distribution. This indicates that martyrs’ memorial facilities are significantly concentrated in low-population-density areas. H2 is supported.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nq4_more_extreme_df <- mc_df[mc_df$Low >= obs_mf_counts[\"Low\"],]\nq4_prop_more_extreme <- nrow(q4_more_extreme_df) / nrow(mc_df)\nq4_prop_more_extreme\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.001\n```\n\n\n:::\n:::\n\n\n\n\n\n\nSimilarly, we can calculate the proportion of values as extreme as or more extreme than the observed value relative to the total sample (1000). The result is 0.001, indicating that in 999 simulations, no values as extreme as or more extreme than the observed value were found. This provides stronger support for H2.\n\n### 4.4. Distance to Capital and Revolution\n\nThe distance from the capital reflects the cost for the government to effectively exercise administrative control and suppress the revolution in that area. The farther a location is from the capital, the higher the cost for the government to suppress the revolution. On the other hand, the closer a location is to the capital, the harder it is for revolutionary parties to spread their ideology, develop party members, organize, and survive. Therefore, I use the distance from the Mansion of the President in Nanjing to measure the distance from the capital and propose the hypothesis:\n\nH3: Martyrs’ memorial facilities tend to be distributed in areas farther from the capital.\n\n![National Government of the ROC](pictures/National_Government_of_the_R.O.C.jpg)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmp_coords <- c(32.04484, 118.79236)\nmp_df <- tibble(name=c(\"Mansion of the President of Nanjing\"), lat=mp_coords[1], lon=mp_coords[2])\nmp_sf <- sf::st_as_sf(\n  mp_df,\n  coords=c(\"lon\", \"lat\"),\n  crs=4326\n) |> sf::st_transform(3857)\nmapview(mp_sf)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-48-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nNext, I will compare the actual average distance from the capital to the martyrs’ memorial facilities with the average distance from the capital obtained from the previous Monte Carlo simulation results in the same way.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nall_distances <- southeast_mf_sf |> sf::st_distance(mp_sf)\nobs_mean_dist <- as.numeric(mean(all_distances))\nobs_mean_dist\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 763375.8\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe actual average distance from the capital to the martyrs’ memorial facilities is 763375.8 m.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompute_mean_dist <- function(sim_ppp) {\n  sim_prot_sf <- sim_ppp |> sf::st_as_sf() |> sf::st_set_crs(3857) |> filter(label == \"point\")\n  sim_dists <- sim_prot_sf |> sf::st_distance(mp_sf)\n  return(mean(as.numeric(sim_dists)))\n}\n\nsim_dists <- lapply(X=full_sims_list, FUN=compute_mean_dist)\nsim_dists |> head()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`Simulation 1`\n[1] 652593\n\n$`Simulation 2`\n[1] 643623.9\n\n$`Simulation 3`\n[1] 648740.3\n\n$`Simulation 4`\n[1] 668080.1\n\n$`Simulation 5`\n[1] 657061.8\n\n$`Simulation 6`\n[1] 666434\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim_dist_df <- unlist(sim_dists) |> as_tibble()\nobs_dist_df <- tibble(value = obs_mean_dist)\nmc_dist_df <- bind_rows(sim_dist_df, obs_dist_df)\nmc_dist_df |> ggplot(aes(x=value)) +\n  geom_density(fill=cb_palette[2], alpha=0.5) +\n  geom_vline(xintercept = obs_mean_dist, linetype=\"dashed\", color=cb_palette[1]) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-51-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nq5_more_extreme_df <- mc_dist_df[mc_dist_df$value >= obs_mean_dist,]\nq5_more_extreme_prop <- nrow(q5_more_extreme_df) / nrow(mc_dist_df)\nq5_more_extreme_prop\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.001\n```\n\n\n:::\n:::\n\n\n\n\n\n\nBoth graph and p-value support H3, martyrs’ memorial facilities tend to be distributed in areas farther from the capital.\n\n## 5. Province Boundary and Revolutionary Strategy\n\nJiangxi Province served as the base of the Chinese Soviet Republic and the cradle of the CCP’s armed revolution. Observing the boundaries of Jiangxi Province, I discovered an intriguing phenomenon. Along the border between Jiangxi and Hunan Province (to the west of Jiangxi), the number of martyrs’ memorial facilities on the Hunan side of the border is sparse and highly dispersed, particularly near the boundary. In contrast, on the Jiangxi side, the distribution of martyrs’ memorial facilities is much denser, especially near the border. This observation might provide insights into the strategic considerations of the Chinese Communist Revolution.\n\nIn Mao Zedong’s 1928 essay “Why is it that Red Political Power can Exist in China?” he elaborates on the survival strategy of Red political power:\n\n> \"The long-term survival inside a country of one or more small areas under Red political power completely encircled by a White regime is a phenomenon that has never occurred anywhere else in the world. There are special reasons for this unusual phenomenon. It can exist and develop only under certain conditions. ... For this unusual phenomenon can occur only in conjunction with another unusual phenomenon, namely, war within the White regime. It is a feature of semicolonial China that, since the first year of the Republic \\[1912\\] the various cliques of old and new warlords have waged incessant wars against one another, supported by imperialism from abroad and by the comprador and landlord classes at home. ... The prolonged splits and wars within the White regime provide a condition for the emergence and persistence of one or more small Red areas under the leadership of the Communist Party amidst the encirclement of the White regime. The independent regime carved out on the borders of Hunan and Jiangxi Provinces is one of many such small areas.\" [@maoWhyItThat1967]\n\n![Warloads in 1930s China](pictures/Warlords.jpg)\n\nTherefore, I plan to examine the relationship between the distribution of martyrs’ memorial facilities and their distance from the Jiangxi Province border. To begin, I visualized the boundary of Jiangxi Province alongside the martyrs’ memorial facilities.\n\n### 5.1. Visualize Jiangxi Province Border\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\njiangxi_sf <- southeast_china_sf %>% filter(province == \"江西省\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\njiangxi_bd <- jiangxi_sf %>% st_union %>% st_boundary() %>% st_as_sf()\nmapview(southeast_mf_sf) + mapview(jiangxi_bd)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-54-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n### 5.2. Visualize Density of Distance\n\nNext, I calculated the distance of all martyrs’ memorial facilities from the Jiangxi Province border, recording distances within the province as negative values. Finally, I plotted the density distribution of these distances.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\njiangxi_polygon <- st_cast(jiangxi_bd, \"POLYGON\")\n\nin_sf <- southeast_mf_sf %>%\n  filter(st_intersects(southeast_mf_sf, jiangxi_polygon, sparse = FALSE))\nout_sf <- southeast_mf_sf %>%\n  filter(!st_intersects(southeast_mf_sf, jiangxi_polygon, sparse = FALSE))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nin_sf$distance <- in_sf %>% st_distance(jiangxi_bd) %>% as.vector\nin_sf <- in_sf %>% mutate(distance = -distance)\nout_sf$distance <- out_sf %>% st_distance(jiangxi_bd) %>% as.vector\n\ndistance = rbind(in_sf, out_sf)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(distance, aes(x = distance/1000)) +\n  geom_density(fill = cb_palette[2], alpha = 0.5) +\n  labs(\n    title = \"Density Plot of Distance\",\n    x = \"Distance (km)\",\n    y = \"Density\"\n  ) +\n  geom_vline(xintercept = 0, linetype=\"dashed\", color=cb_palette[1]) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-57-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs shown in the figure, martyrs’ memorial facilities are densely concentrated near the inner side of Jiangxi Province’s border (the region to the left of x = 0). Within Jiangxi Province, density decreases the farther from the border. A similar pattern is observed outside Jiangxi, but around 200 km from the border, a new peak emerges, indicating the presence of other “red regimes” apart from the Central Soviet Area.\n\nFrom this, we can draw two preliminary conclusions. First, China’s communist revolution can be characterized as a “border revolution,” with red regimes predominantly established at the intersection of political boundaries. Second, it is a “dispersed revolution,” where apart from the Central Soviet Area, other red regimes emerged at an “optimal” distance from Jiangxi’s border. This spacing minimized the risk of suppression while remaining close enough to facilitate communication and mutual support among the bases.\n\n![Map of the Long March 1934-1935](pictures/Map_of_the_Long_March_1934-1935-en.png)\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistance_filtered <- distance %>% filter(distance < abs(min(distance)))\n\nggplot(distance_filtered, aes(x = distance/1000)) +\n  geom_density(fill = cb_palette[2], alpha = 0.5) +\n  labs(\n    title = \"Density Plot of Distance\",\n    x = \"Distance (km)\",\n    y = \"Density\"\n  ) +\n  geom_vline(xintercept = 0, linetype=\"dashed\", color=cb_palette[1]) +\n  theme_classic()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-58-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nWhen zooming in on the observation window to ensure that the maximum distances inside and outside the provincial border are equal, the above patterns remain consistent.\n\n### 5.3. Facilities in Different Buffer Areas\n\nNext, I plan to use st_buffer in increments of 5,000 meters to calculate the number of martyrs’ memorial facilities within various distance ranges inside and outside Jiangxi Province’s border (e.g., 0–5,000 meters, 5,000–10,000 meters, and so on). This approach will allow us to examine the distribution patterns of China’s red regimes more closely.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_buffer_counts <- function(times) {\n  distance <- 5000 * times\n  jiangxi_buffer <- jiangxi_bd %>% st_buffer(dist = distance)\n\n  in_buffer <- sum(st_intersects(in_sf, jiangxi_buffer, sparse = FALSE))\n  out_buffer <- sum(st_intersects(out_sf, jiangxi_buffer, sparse = FALSE))\n  \n  df <- data.frame(\n    distance = c(-distance, distance),\n    counts = c(in_buffer, out_buffer))\n  \n  return(df)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbuffer_counts <- generate_buffer_counts(1)\nbuffer_counts\n```\n\n::: {.cell-output-display}\n\n| distance| counts|\n|--------:|------:|\n|    -5000|     18|\n|     5000|      5|\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_between_buffer_counts <- function(times) {\n  big_distance <- 5000 * times\n  small_distance <- 5000 * (times-1)\n  big_buffer <- jiangxi_bd %>% st_buffer(dist = big_distance)\n  small_buffer <- jiangxi_bd %>% st_buffer(dist = small_distance)\n  \n  buffer_difference <- st_difference(big_buffer, small_buffer)\n  \n  in_buffer <- sum(st_intersects(in_sf, buffer_difference, sparse = FALSE))\n  out_buffer <- sum(st_intersects(out_sf, buffer_difference, sparse = FALSE))\n  \n  df <- data.frame(\n    distance = c(-big_distance, big_distance),\n    counts = c(in_buffer, out_buffer))\n  \n  return(df)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngenerate_between_buffer_counts(2)\n```\n\n::: {.cell-output-display}\n\n| distance| counts|\n|--------:|------:|\n|   -10000|     50|\n|    10000|      7|\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor (times in 2:10) {\n  # Get the dataframe for this value of times\n  temp_df <- generate_between_buffer_counts(times)\n  \n  # Combine it with the existing buffer_counts dataframe\n  buffer_counts <-  rbind(buffer_counts, temp_df)\n}\n\nbuffer_counts <<- buffer_counts\n\nbuffer_counts\n```\n\n::: {.cell-output-display}\n\n| distance| counts|\n|--------:|------:|\n|    -5000|     18|\n|     5000|      5|\n|   -10000|     50|\n|    10000|      7|\n|   -15000|     27|\n|    15000|     10|\n|   -20000|     29|\n|    20000|      9|\n|   -25000|     15|\n|    25000|      7|\n|   -30000|     25|\n|    30000|     11|\n|   -35000|     18|\n|    35000|     14|\n|   -40000|     21|\n|    40000|     10|\n|   -45000|     17|\n|    45000|      6|\n|   -50000|     10|\n|    50000|      9|\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(buffer_counts, aes(x = distance, y = counts)) +\n  geom_line(color = cb_palette[2], size = 1) +\n  geom_point(color = cb_palette[1], size = 2) +  # Add points to highlight values\n  labs(\n    title = \"Line Plot of Counts by Distance\",\n    x = \"Distance\",\n    y = \"Counts\"\n  ) +\n  theme_minimal() +\n  geom_vline(xintercept = 0, linetype=\"dashed\", color=cb_palette[1]) +\n  theme(\n    plot.title = element_text(hjust = 0.5)  # Center the title\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-64-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAs shown in the figure, there are 18 facilities within 0–5,000 meters inside the provincial border, while the number reaches an astonishing 50 in the 5,000–10,000 meter range. However, outside the provincial border, the numbers are only 5 and 7 in these respective distance ranges. This stark contrast between inside and outside the border provides insights into the strategic considerations of the Chinese Communist revolution. The red regimes were primarily concentrated 5,000–10,000 meters inside the provincial border. This distance likely created a buffer zone from external provinces, protecting the regime from direct attacks by warlords outside Jiangxi Province. At the same time, the distance was short enough to allow the regime to retreat quickly to neighboring provinces when under attack from warlords within Jiangxi Province.\n\nTo some extent, the “free-rider problem” and “tragedy of the commons” among warlords in different provinces created a survival space for the Chinese Communist regime. While the optimal solution for the warlords would have been to unite and eliminate the red regime, once the Communists were driven out of their territory, warlords often stopped pursuing them further, as argued by @HuangDaoXuanZhangLiYuXianJieZhongYangSuQuDeGeMing193319342011. Moreover, warlords were generally reluctant to expend their own military resources or hoped neighboring warlords would take on the task of eliminating the Communist regime. This “free-rider” behavior ultimately resulted in no single warlord committing fully to suppression efforts, allowing the red regime to survive.\n\n### 5.4. Testing Distribution Patterns Across Two Sides\n\nFrom the figure above, it is clear that the distribution of memorial facilities is more concentrated on the inner side of the provincial boundary than on the outer side, and the number increases as it gets closer to the boundary. \n\nHowever, is the difference in the distribution of points inside and outside the province merely by chance? If we assume that the distribution of facilities is only related to the distance from the provincial boundary and not whether it is on the inside or outside, then the relationship between distance and memorial facility density should be the same on both sides. \n\nTherefore, I hypothesize:\n\n**H3:** The relationship between distance to province border and point density is different across two sides\n\nTo test this null hypothesis, I plan to fit a Poisson point process model to the dataset. A common model for the relationship is a **Poisson process** with **intensity** which is a loglinear function of distance to the province border,\n\n$$\n\\lambda(u) = \\exp(\\beta_0 + \\beta_1 d(u))\n$$\n\n$\\beta_0$ and $\\beta_1$ are coefficients to estimate. $d(u)$ is the distance between points to the province border.\n\nTo begin with, I will fit a Poisson point process model to all points, whether they are on the inside or outside.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\njiangxi_bd_psp <- as.psp(jiangxi_bd, W=as.owin(southeast_china_sfc))\n\nplot(jiangxi_bd_psp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-65-1.pdf){fig-pos='H'}\n:::\n\n```{.r .cell-code}\nmf_bd <- list(\n  points = mf_ppp,\n  lines = jiangxi_bd_psp\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_bd <- solapply(mf_bd, rescale, s=1000, unitname=\"km\")\n\ndis_bd <- with(mf_bd,distfun(lines))\n\nfit <- ppm(points ~ dis_bd, data=mf_bd)\n\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_bd\n\nFitted trend coefficients:\n (Intercept)       dis_bd \n-6.616089819 -0.001468756 \n\n                Estimate         S.E.      CI95.lo      CI95.hi Ztest\n(Intercept) -6.616089819 0.0406354615 -6.695733860 -6.536445778   ***\ndis_bd      -0.001468756 0.0001581955 -0.001778814 -0.001158699   ***\n                   Zval\n(Intercept) -162.815668\ndis_bd        -9.284436\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit, \"dis_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-67-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThe figure above shows the effect of the distance covariate on the intensity function. Overall, the closer to the provincial boundary, the higher the density of memorial facilities. Next, I will fit a Poisson point process model to the points inside and outside the province separately.\n\nFrom the figure in Section 5.3, the relationship between point density and distance appears to be non-monotonic, whether inside or outside the province. To capture this non-monotonic relationship, I attempt to include the squared distance term, $d(u)^2$, in the Poisson point process model.\n\n$$\n\\lambda(u) = \\exp(\\beta_0 + \\beta_1 d(u) + \\beta_2 d(u)^2)\n$$\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_in_ppp <- as.ppp(sf::st_as_sfc(in_sf), W=as.owin(southeast_china_sfc))\n\nmf_in_bd <- list(\n  points = mf_in_ppp,\n  lines = jiangxi_bd_psp\n)\n\nmf_in_bd <- solapply(mf_in_bd, rescale, s=1000, unitname=\"km\")\n\ndis_in_bd <- with(mf_in_bd,distfun(lines))\n\nfit_in <- ppm(points ~ dis_in_bd + I(dis_in_bd^2), data=mf_in_bd)\n\nfit_in\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_in_bd + I(dis_in_bd^2)\n\nFitted trend coefficients:\n   (Intercept)      dis_in_bd I(dis_in_bd^2) \n -6.9905754788   0.0090799642  -0.0001639304 \n\n                    Estimate         S.E.       CI95.lo       CI95.hi Ztest\n(Intercept)    -6.9905754788 1.096126e-01 -7.2054122883 -6.7757386693   ***\ndis_in_bd       0.0090799642 3.722810e-03  0.0017833899  0.0163765385     *\nI(dis_in_bd^2) -0.0001639304 2.600917e-05 -0.0002149074 -0.0001129534   ***\n                     Zval\n(Intercept)    -63.775273\ndis_in_bd        2.439008\nI(dis_in_bd^2)  -6.302791\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit_in, \"dis_in_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-69-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_out_ppp <- as.ppp(sf::st_as_sfc(out_sf), W=as.owin(southeast_china_sfc))\n\nmf_out_bd <- list(\n  points = mf_out_ppp,\n  lines = jiangxi_bd_psp\n)\n\nmf_out_bd <- solapply(mf_out_bd, rescale, s=1000, unitname=\"km\")\n\ndis_out_bd <- with(mf_out_bd,distfun(lines))\n\nfit_out <- ppm(points ~ dis_out_bd + I(dis_out_bd^2), data=mf_out_bd)\n\nfit_out\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_out_bd + I(dis_out_bd^2)\n\nFitted trend coefficients:\n    (Intercept)      dis_out_bd I(dis_out_bd^2) \n  -7.835586e+00    5.282671e-03   -8.287378e-06 \n\n                     Estimate         S.E.       CI95.lo       CI95.hi Ztest\n(Intercept)     -7.835586e+00 8.401398e-02 -8.000251e+00 -7.670922e+00   ***\ndis_out_bd       5.282671e-03 6.605795e-04  3.987959e-03  6.577383e-03   ***\nI(dis_out_bd^2) -8.287378e-06 1.115050e-06 -1.047284e-05 -6.101920e-06   ***\n                      Zval\n(Intercept)     -93.265272\ndis_out_bd        7.997025\nI(dis_out_bd^2)  -7.432294\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit_out, \"dis_out_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-71-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nIt is evident that the Poisson point process models for points inside and outside the province are very different. However, this comparison is somewhat unfair. Firstly, there are more points outside the province than inside, and the points outside have a much broader distribution space. Therefore, we need to account for this unfairness in the comparison. Theoretically, if the distinction between inside and outside the province does not matter and only the distance is relevant, points inside and outside the province within a 50 km buffer should be quite similar. Therefore, I will focus only on the points within 50 km of the provincial boundary.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nin_50_mf <- in_sf %>% filter(distance > -50000)\nout_50_mf <- out_sf %>% filter(distance < 50000)\n\nprint(nrow(in_50_mf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 230\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(nrow(out_50_mf))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 88\n```\n\n\n:::\n:::\n\n\n\n\n\n\nHowever, this introduces a new unfairness in the comparison, as there are more points inside the province than outside. To ensure that we can use the Likelihood Ratio Test for comparing the two models, we must control for an equal number of points inside and outside the province. Therefore, I randomly sampled the same number of points inside the province as there are outside. Since the sampling is random, we can assume that the relationship between the distance to the province boundary and the density of these points is the same as that of the population.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nin_50_mf_sample <- in_50_mf %>% slice_sample(n = 88)\n```\n:::\n\n\n\n\n\n\nThen, we can visualize points inside and outside the province.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmapview(in_50_mf_sample, color = cb_palette[1]) + mapview(out_50_mf, color = cb_palette[2]) + mapview(jiangxi_bd)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-74-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nNext, I will fit a Poisson point process model to the points inside and outside the province separately.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nin_50_ppp <- as.ppp(sf::st_as_sfc(in_50_mf_sample), W=as.owin(southeast_china_sfc))\n\nin_50 <- list(\n  points = in_50_ppp,\n  lines = jiangxi_bd_psp\n)\n\nin_50 <- solapply(in_50, rescale, s=1000, unitname=\"km\")\n\ndis_in_bd <- with(in_50,distfun(lines))\n\nfit_in_50 <- ppm(points ~ dis_in_bd + I(dis_in_bd^2), data=in_50)\n\nfit_in_50\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_in_bd + I(dis_in_bd^2)\n\nFitted trend coefficients:\n   (Intercept)      dis_in_bd I(dis_in_bd^2) \n  -8.349186860    0.076614951   -0.001929095 \n\n                   Estimate         S.E.      CI95.lo       CI95.hi Ztest\n(Intercept)    -8.349186860 0.2852317161 -8.908230751 -7.7901429688   ***\ndis_in_bd       0.076614951 0.0248564839  0.027897138  0.1253327641    **\nI(dis_in_bd^2) -0.001929095 0.0004773566 -0.002864697 -0.0009934933   ***\n                     Zval\n(Intercept)    -29.271594\ndis_in_bd        3.082292\nI(dis_in_bd^2)  -4.041203\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit_in_50, \"dis_in_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-76-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nout_50_ppp <- as.ppp(sf::st_as_sfc(out_50_mf), W=as.owin(southeast_china_sfc))\n\nout_50 <- list(\n  points = out_50_ppp,\n  lines = jiangxi_bd_psp\n)\n\nout_50 <- solapply(out_50, rescale, s=1000, unitname=\"km\")\n\ndis_out_bd <- with(out_50,distfun(lines))\n\nfit_out_50 <- ppm(points ~ dis_out_bd + I(dis_out_bd^2), data=out_50)\n\nfit_out_50\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_out_bd + I(dis_out_bd^2)\n\nFitted trend coefficients:\n    (Intercept)      dis_out_bd I(dis_out_bd^2) \n   -8.853884714     0.095317017    -0.001899707 \n\n                    Estimate         S.E.      CI95.lo      CI95.hi Ztest\n(Intercept)     -8.853884714 0.3442055559 -9.528515207 -8.179254221   ***\ndis_out_bd       0.095317017 0.0247771669  0.046754662  0.143879372   ***\nI(dis_out_bd^2) -0.001899707 0.0004192267 -0.002721377 -0.001078038   ***\n                      Zval\n(Intercept)     -25.722666\ndis_out_bd        3.846970\nI(dis_out_bd^2)  -4.531456\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit_out_50, \"dis_out_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-78-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nAfter controlling for the buffer and the number of points, it is clear that the distribution patterns of the points inside and outside the province are now much more similar. We can no longer visually distinguish differences in their distribution patterns. Therefore, I used the Likelihood Ratio Test (LRT) to test the goodness of fit of the two models.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoef_in_50 <- coef(fit_in_50)\ncoef_out_50 <- coef(fit_out_50)\n\nprint(coef_in_50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   (Intercept)      dis_in_bd I(dis_in_bd^2) \n  -8.349186860    0.076614951   -0.001929095 \n```\n\n\n:::\n\n```{.r .cell-code}\nprint(coef_out_50)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    (Intercept)      dis_out_bd I(dis_out_bd^2) \n   -8.853884714     0.095317017    -0.001899707 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlrt_result <- lrtest(fit_in_50, fit_out_50)\nlrt_result\n```\n\n::: {.cell-output-display}\n\n| #Df|    LogLik| Df|    Chisq| Pr(>Chisq)|\n|---:|---------:|--:|--------:|----------:|\n|   3| -786.0412| NA|       NA|         NA|\n|   3| -792.2587|  0| 12.43485|          0|\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_value <- lrt_result$`Pr(>Chisq)`[2] \n\np_value\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n\n\nThe results of the LRT show that the p-value of the chi-square test is very close to 0, indicating a significant difference in the goodness of fit between the two models. Therefore, we can confidently conclude that the relationship between the distance from the province boundary and the density of memorial facilities differs between the inside and outside of the province. Therefore, the null hypothesis is rejected.\n\nHowever, this difference could also be due to chance. Since we performed random sampling of points within the province, it is possible that the null hypothesis is rejected because we selected a funky sample. To reduce the likelihood of committing a Type I error due to sampling, I performed 999 additional random samples and repeated the same steps. Thus, along with the previous result, we can obtain a total of 1,000 p-values.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngen_p_value <- function() {\n  sample <- in_50_mf %>% slice_sample(n = 88)\n  \n  in_50_ppp <- as.ppp(suppressWarnings(as.ppp(sf::st_as_sfc(sample))), W=as.owin(southeast_china_sfc))\n\n  in_50 <- list(\n    points = in_50_ppp,\n    lines = jiangxi_bd_psp\n  )\n\n  in_50 <- solapply(in_50, rescale, s=1000, unitname=\"km\")\n\n  dis_in_bd <- with(in_50,distfun(lines))\n\n  fit_in_50 <- ppm(points ~ dis_in_bd + I(dis_in_bd^2), data=in_50)\n\n  lrt_result <- lrtest(fit_in_50, fit_out_50)\n  \n  p_value <- lrt_result$`Pr(>Chisq)`[2] \n\n  return(p_value)\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_values <- replicate(999, gen_p_value())\n\np_value_df <- data.frame(p_value = p_values)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\np_value_df <- rbind(p_value_df, data.frame(p_value = p_value))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmax(p_value_df$p_value)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n\n\n\nIn the 1000 samples, the points inside the province consistently exhibited a Poisson point process distinct from the points outside the province, and the difference in model fit was highly significant, with the largest p-value extremely close to 0. Therefore, we can be highly confident in rejecting the null hypothesis H3.\n\n### 5.5. Apply to All Province Borders\n\nIs Jiangxi’s provincial border a unique case? Does the logic of this “border revolution” apply to the borders of other provinces as well? To address these questions, I fit a Poisson point process model to all memorial facilities and the borders of all provinces in southeastern China.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nguangdong_bd <- southeast_china_sf %>% filter(province == \"广东省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nfujian_bd <- southeast_china_sf %>% filter(province == \"福建省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nhunan_bd <- southeast_china_sf %>% filter(province == \"湖南省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nhubei_bd <- southeast_china_sf %>% filter(province == \"湖北省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nanhui_bd <- southeast_china_sf %>% filter(province == \"安徽省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\njiangsu_bd <- southeast_china_sf %>% filter(province == \"江苏省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nzhejiang_bd <- southeast_china_sf %>% filter(province == \"浙江省\") %>% st_union %>% st_boundary() %>% st_as_sf()\n\nshanghai_bd <- southeast_china_sf %>% filter(province == \"上海市\") %>% st_union %>% st_boundary() %>% st_as_sf()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbds <- rbind(jiangxi_bd, guangdong_bd, fujian_bd, hunan_bd, hubei_bd, anhui_bd, jiangsu_bd, zhejiang_bd, shanghai_bd)\n\nbds_psp <- as.psp(bds, W=as.owin(southeast_china_sfc))\n\nplot(bds_psp)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-87-1.pdf){fig-pos='H'}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_bds <- list(\n  points = mf_ppp,\n  lines = bds_psp\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmf_bds <- solapply(mf_bds, rescale, s=1000, unitname=\"km\")\n\ndis_bd <- with(mf_bds,distfun(lines))\n\nfit <- ppm(points ~ dis_bd, data=mf_bds)\n\nfit\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNonstationary Poisson process\nFitted to point pattern dataset 'points'\n\nLog intensity:  ~dis_bd\n\nFitted trend coefficients:\n (Intercept)       dis_bd \n-6.817399790 -0.002409015 \n\n                Estimate         S.E.      CI95.lo      CI95.hi Ztest\n(Intercept) -6.817399790 0.0401921139 -6.896174886 -6.738624695   ***\ndis_bd      -0.002409015 0.0006358772 -0.003655311 -0.001162718   ***\n                   Zval\n(Intercept) -169.620334\ndis_bd        -3.788491\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(effectfun(fit, \"dis_bd\", se.fit=TRUE))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-pdf/unnamed-chunk-90-1.pdf){fig-pos='H'}\n:::\n:::\n\n\n\n\n\n\nThe results show that both $\\beta_0$ and $\\beta_1$ are highly significant, indicating that the negative correlation between the distance to the provincial border and the density of points holds true for all provinces in southeastern China.\n\n## 6. Conclusion\n\nThrough the comprehensive application of GIS technology to analyze data on martyrs’ memorial facilities, I have gained deeper insights into the formation and development of the Chinese Communist Revolution in the early 20th century.\n\nFirst, there appears to be an inverted U-shaped relationship between local clan influence and the development of the Chinese Communist Revolution. When clan culture was weak, stronger clan networks provided more educational opportunities, increasing exposure to Marxist-Leninist ideas. However, when clan culture was very strong, its conservative nature and the dominance of the gentry suppressed the spread and development of radical ideologies.\n\nSecond, the Chinese Communist Revolution tended to develop in regions with low population density and areas far from governmental control. These areas were less accessible to state ideological enforcement and military suppression of revolutionary activities.\n\nFinally, as Mao Zedong himself described, the survival strategy of the Chinese Red regime involved establishing bases at the borders between different White regimes. Consequently, the density of martyrs’ memorial facilities increases closer to provincial borders. In the province that hosted the Chinese Soviet Republic, Jiangxi, the geographic relationship between revolutionary facilities and provincial borders exhibited differences on either side of the border. Within the province, the relationship between the distance to the provincial border and facility density was more pronounced.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}